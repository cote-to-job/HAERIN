

class Solution {
    public String solution(int[] numbers, String hand) {
        /*
        왼손과 오른손의 엄지손가락만을 이용해서 숫자 입력.
        왼손 엄지는 * 키패드 위치에서, 오른손 엄지는 # 키패드 위치에서 시작.
        엄지손가락은 상하좌우 4가지 방향으로만 이동 가능. 한 칸은 거리 1에 해당.
        왼손 엄지 : 1, 4, 7
        오른손 엄지 : 3, 6, 9
        numbers : [1, 3, 4, 5, 8, 2, 1, 4, 5, 9, 5]	
        hand : "right"
        result : "LRLLLRLLRRL"
        
        [1] [2] [3]    →  (0,0) (0,1) (0,2)
        [4] [5] [6]    →  (1,0) (1,1) (1,2)
        [7] [8] [9]    →  (2,0) (2,1) (2,2)
        [*] [0] [#]    →  (3,0) (3,1) (3,2)
        */
        
        // 키패드 좌표 
        int[][] keypad = {
            {3, 1},
            {0, 0}, {0, 1}, {0, 2},
            {1, 0}, {1, 1}, {1, 2},
            {2, 0}, {2, 1}, {2, 2}
            
        };
        
        // 초기 위치
        int[] left = {3, 0};  // * 키패드
        int[] right = {3, 2}; // # 키패드
        
        StringBuilder answer = new StringBuilder();
        
        // ToDo
        for (int num : numbers) {
            if (num == 1 || num == 4 || num == 7) {
                
                // 무조건 왼손
                answer.append("L");
                left = keypad[num];
                
            } else if (num == 3 || num == 6 || num == 9) {
                
                // 무조건 오른손
                answer.append("R");
                right = keypad[num];
                
            } else {
                
                // 가운데 숫자: 거리 계산 필요
                int[] target = keypad[num];

                int leftDist = Math.abs(left[0] - target[0]) + Math.abs(left[1] - target[1]);
                int rightDist = Math.abs(right[0] - target[0]) + Math.abs(right[1] - target[1]);

                if (leftDist < rightDist) {
                    answer.append("L");
                    left = target;
                } else if (leftDist > rightDist) {
                    answer.append("R");
                    right = target;
                } else {
                    if (hand.equals("right")) {
                        answer.append("R");
                        right = target;
                    } else {
                        answer.append("L");
                        left = target;
                    }
                }
            }
        }
        
        
        return answer.toString();
    }
}
